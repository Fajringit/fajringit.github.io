name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: fajrin
          POSTGRES_PASSWORD: password123
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U fajrin -d testdb"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
        extra_hosts:
          - "host.docker.internal:host-gateway"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      # - name: Setup Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: "3.12"

      - name: Install Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client libpq-dev gcc python3-dev

      - name: Setup Database
        run: |
          PGPASSWORD=password123 psql -h host.docker.internal -U fajrin -d testdb -c "
          CREATE TABLE IF NOT EXISTS users (
              id SERIAL PRIMARY KEY,
              name VARCHAR(100),
              email VARCHAR(100) UNIQUE
          );"

      - name: Wait for Flask Server
        run: |
          echo "Waiting for Flask server to fully start..."
          sleep 10

      - name: Install Python packages
        run: |
          pip install --upgrade pip
          pip install psycopg2-binary>=2.9.9
          pip install -r requirements.txt

      - name: Start Flask Server with Health Check
        run: |
          nohup python app.py &
          echo "Menunggu Flask server..."
          for i in {1..30}; do
            if curl -s http://127.0.0.1:5000/health; then
              echo "✅ Flask server is ready"
              break
            fi
            echo "⏳ Waiting for Flask server to start... ($i/30)"
            sleep 3
          done

      - name: Run Tests
        run: |
          sleep 5
          pytest test_api.py
